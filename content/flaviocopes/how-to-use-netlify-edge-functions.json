{
  "title": "How to use Netlify Edge Functions",
  "url": "https://flaviocopes.com/netlify-edge-functions/",
  "date": "Fri, 22 Apr 2022 07:00:00 +0200",
  "content": "        <p>Netlify Edge Functions are a very interesting feature offered by <a href=\"https://flaviocopes.com/netlify/\">Netlify</a>, the popular hosting platform.</p><p>It&rsquo;s interesting because while Netlify is famous as a static hosting, Edge Functions allow you do do things that are &hellip;not so static.</p><p>Allowing us to do things like:</p><ul><li>geolocation</li><li>localization</li><li>A/B testing</li><li>redirects</li><li>&hellip;and much more</li></ul><p>They are similar to <a href=\"https://flaviocopes.com/netlify-functions/\">Netlify Serverless Functions</a>, except they run on the Netlify Edge which means they are closer to the user and run on multiple CDN locations, and they are counted differently (3m calls/month instead of 125k calls per site/month).</p><p>To enable Edge Functions you create a <code>netlify.toml</code> file in your website repository (if you don&rsquo;t have one already) with this content:</p><pre tabindex=\"0\"><code>[[edge_functions]]  function = &#34;hello&#34;   path = &#34;/hello&#34; </code></pre><p><code>function</code> is the file name in <code>netlify/edge-functions/</code> without the <code>.js</code> extension.</p><p><code>path</code> is the URL path this function will be available on</p><p>Then you can write a function in a file <code>netlify/edge-functions/hello.js</code>:</p><div class=\"highlight\"><pre tabindex=\"0\" ><code class=\"language-js\" data-lang=\"js\"><span >export</span> <span >default</span> () =&gt; <span >new</span> <span >Response</span>(<span >&#34;Hello world&#34;</span>)</code></pre></div><p><code>Response</code> is an object we have available to send the response back to the client.</p><p>and once you deploy the repository, you can access its result using the URL</p><pre tabindex=\"0\"><code>https://&lt;YOURSITEDOMAIN&gt;/hello</code></pre><p>Try it!</p><p>During the deploy you will see this in the logs:</p><p><img src=\"Screen Shot 2022-04-20 at 12.24.02.png\" alt=\"\" /></p><p>And once the deploy is done, you&rsquo;ll see a page dynamically generated with the content <code>Hello, World!</code>.</p><p>But I recommend first to test them locally using the Netlify CLI <code>netlify dev</code>. Make sure it&rsquo;s up to date with <code>npm i -g netlify-cli</code> otherwise it might not have the feature enabled.</p><p>You can set the response headers, like the content type for example, passing a second parameter to <code>new Response()</code>:</p><div class=\"highlight\"><pre tabindex=\"0\" ><code class=\"language-js\" data-lang=\"js\"><span >export</span> <span >default</span> () =&gt;  <span >new</span> <span >Response</span>(<span >&#39;Hello world&#39;</span>, {    <span >headers</span><span >:</span> { <span >&#39;content-type&#39;</span><span >:</span> <span >&#39;text/html&#39;</span> },  })</code></pre></div><p>The edge function receives two arguments: <code>request</code> and <code>context</code>:</p><div class=\"highlight\"><pre tabindex=\"0\" ><code class=\"language-js\" data-lang=\"js\"><span >export</span> <span >default</span> (<span >request</span>, <span >context</span>) =&gt; {  <span >//...</span><span ></span>}</code></pre></div><p>Those two objects provide interesting features.</p><p><code>request</code> allows you to access all the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Request\">request data</a>, and it&rsquo;s the same request object you get when using the Fetch API.</p><p><code>context</code> allows you to access cookies, geolocation data, json, log, and more.</p><p>You can write to the logs using context.log():</p><div class=\"highlight\"><pre tabindex=\"0\" ><code class=\"language-js\" data-lang=\"js\"><span >export</span> <span >default</span> (<span >request</span>, <span >context</span>) =&gt; {  <span >context</span>.<span >log</span>(<span >&#39;test&#39;</span>)}</code></pre></div><p>You can see the logs in the Edge Functions menu of your website:</p><p><img src=\"Screen Shot 2022-04-20 at 12.39.06.png\" alt=\"\" /></p><p>You can return JSON using the <code>context.json</code> function:</p><div class=\"highlight\"><pre tabindex=\"0\" ><code class=\"language-js\" data-lang=\"js\"><span >export</span> <span >default</span> (<span >request</span>, <span >context</span>) =&gt; {  <span >return</span> <span >context</span>.<span >json</span>({ <span >hello</span><span >:</span> <span >&#39;world&#39;</span> })}</code></pre></div><p>If you want to write more than one function, you add other entries in <code>netlify.toml</code>:</p><pre tabindex=\"0\"><code>[[edge_functions]]  function = &#34;hello&#34;  path = &#34;/hello&#34;[[edge_functions]]  function = &#34;second&#34;  path = &#34;/second&#34;</code></pre><p>The function can be async if you plan to use promise-based APIs like the <a href=\"https://flaviocopes.com/fetch-api/\">Fetch API</a> to get some JSON from a remote server:</p><div class=\"highlight\"><pre tabindex=\"0\" ><code class=\"language-js\" data-lang=\"js\"><span >export</span> <span >default</span> <span >async</span> () =&gt; <span >await</span> <span >fetch</span>(<span >&#39;https://dog.ceo/api/breeds/image/random&#39;</span>)</code></pre></div><p>or even an image directly:</p><div class=\"highlight\"><pre tabindex=\"0\" ><code class=\"language-js\" data-lang=\"js\"><span >export</span> <span >default</span> <span >async</span> () =&gt; <span >await</span> <span >fetch</span>(<span >&#39;https://placekitten.com/g/300/300&#39;</span>)</code></pre></div><p>You can get the user&rsquo;s location:</p><div class=\"highlight\"><pre tabindex=\"0\" ><code class=\"language-js\" data-lang=\"js\"><span >export</span> <span >default</span> <span >async</span> (<span >request</span>, <span >context</span>) =&gt;  <span >new</span> <span >Response</span>(<span >`</span><span >    Country code: </span><span >${</span><span >context</span>.<span >geo</span><span >?</span>.<span >country</span><span >?</span>.<span >code</span><span >}</span><span ></span><span >    Country name: </span><span >${</span><span >context</span>.<span >geo</span><span >?</span>.<span >country</span><span >?</span>.<span >name</span><span >}</span><span ></span><span >    City: </span><span >${</span><span >context</span>.<span >geo</span><span >?</span>.<span >city</span><span >}</span><span ></span><span >    Subdivision: </span><span >${</span><span >context</span>.<span >geo</span><span >?</span>.<span >subdivision</span><span >?</span>.<span >code</span><span >}</span><span > - </span><span >${</span><span >context</span>.<span >geo</span><span >?</span>.<span >subdivision</span><span >?</span>.<span >name</span><span >}</span><span ></span><span >  `</span>)</code></pre></div><blockquote><p>Tip: does only work on the edge, not locally</p></blockquote><p>There&rsquo;s an example on the Netlify docs on how to use this to block access to your website from a country, for example.</p><p>Working with cookies you can set a <a href=\"https://flaviocopes.com/cookies/\">cookie</a> in this way:</p><div class=\"highlight\"><pre tabindex=\"0\" ><code class=\"language-js\" data-lang=\"js\"><span >export</span> <span >default</span> (<span >request</span>, <span >context</span>) =&gt; {  <span >context</span>.<span >cookies</span>.<span >set</span>({    <span >name</span><span >:</span> <span >&#34;alreadyvisited&#34;</span>,    <span >value</span><span >:</span> <span >&#34;yes&#34;</span>  })}</code></pre></div><p>You can use <code>context.cookies.get()</code> to read the value of a cookie, or <code>context.cookies.delete()</code> to delete a cookie.</p><p>You can access environment variables using <code>Deno.env.get()</code>, like this:</p><div class=\"highlight\"><pre tabindex=\"0\" ><code class=\"language-js\" data-lang=\"js\"><span >Deno</span>.<span >env</span>.<span >get</span>(<span >&#39;YOUR_VARIABLE&#39;</span>)</code></pre></div><p>Example:</p><div class=\"highlight\"><pre tabindex=\"0\" ><code class=\"language-js\" data-lang=\"js\"><span >export</span> <span >default</span> () =&gt; <span >new</span> <span >Response</span>(<span >Deno</span>.<span >env</span>.<span >get</span>(<span >&#39;YOUR_VARIABLE&#39;</span>))</code></pre></div><p>I take this last example to say that Netlify Edge Functions run on Deno.</p><p>Learn more about Deno in my <a href=\"https://flaviocopes.com/deno/\">Deno tutorial</a>!</p><p>That&rsquo;s it for this overview, hopefully it gave you some ideas on how to use them for your use case.</p><p>I think they are pretty cool and maybe you will use them without even realizing when you deploy a Next.js or Remix or SvelteKit app on Netlify, and they use this feature under the hood.</p><p>I recommend you check out the full examples library on <a href=\"https://edge-functions-examples.netlify.app\">https://edge-functions-examples.netlify.app</a> and read more about the Web APIs you can use on <a href=\"https://docs.netlify.com/netlify-labs/experimental-features/edge-functions/api/\">https://docs.netlify.com/netlify-labs/experimental-features/edge-functions/api/</a></p>      ",
  "image": "https://flaviocopes.com/netlify-edge-functions/banner.png",
  "description": "A hands-on guie to Netlify Edge Functions",
  "publisher": "Flaviocopes",
  "publisherUrl": "https://flaviocopes.com/"
}